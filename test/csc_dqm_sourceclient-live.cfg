process DQM = {

       #source = EventStreamHttpReader{
       #string sourceURL = "http://cmsmon:50082/urn:xdaq-application:lid=29"
       #int32 max_event_size = 7000000
       #int32 max_queue_depth = 5
       #untracked string consumerName = "CSC DQM Source"
       #untracked string consumerPriority = "normal"
       #untracked int32 headerRetryInterval = 3
       #untracked double maxEventRequestRate = 2.5
       #untracked PSet SelectEvents = { vstring SelectEvents={"*"} }
     #}


       #source = PoolSource {
	#	untracked vstring fileNames = {'file:/nfshome0/barvic/data/mtcc.00004188.A.testStorageManager_0.98.root'}
	#	include "EventFilter/CSCRawToDigi/data/cscUnpacker.cfi"
	#       replace cscunpacker.UnpackStatusDigis = true
        #	replace cscunpacker.isMTCCData = true
	#	untracked int32 maxEvents = -1
        #	untracked int32 maxEvents = 2000
       #}


     source = EventStreamHttpReader {
        string sourceURL = "http://cmsdisk1.cms:48500/urn:xdaq-application:service=storagemanager"
        int32 max_event_size = 7000000
        int32 max_queue_depth = 5
        untracked string consumerName = "CSC DQM Consumer"
        untracked string consumerPriority = "normal"
        untracked int32 headerRetryInterval = 3
        untracked double maxEventRequestRate = 10
        untracked PSet SelectEvents = { vstring SelectEvents={"*"} }
      }


        //module dummyunpacker = DummyUnpackingModule{ }
        module cscunpacker = CSCDCCUnpacker {
             untracked bool runDQM = true
	     untracked bool Debug =  false
             untracked bool PrintEventNumber = false
             FileInPath theMappingFile = "CondFormats/CSCObjects/data/csc_slice_test_map.txt"        
             untracked bool UseExaminer = true       
             untracked uint32 ErrorMask = 0xDFCFEFFF 
             untracked uint32 ExaminerMask = 0x5FB3BF6
	     untracked bool UnpackStatusDigis = true
	     untracked bool isMTCCData = true
	     InputTag InputObjects = source
        }

       #service = MessageLogger {
       #         vstring destinations = {"CSCDQM.log"}
       #         PSet CSCDQM.log     = { bool noLineBreaks = true   }
       #         PSet detailedInfo.txt = { int32  lineLength = 132    }
       #}
       
	service = CSCMonitor{
		untracked string BookingFile = "file:/nfshome0/barvic/config/emuDQMBooking.xml"
		untracked bool monitorVerbosity=false
		untracked bool   CSCDQMSaveRootFile = true
		untracked int32  EventsInterval = 10000 
		untracked string RootFileName ="CSCMonitorDigi.root"
		FileInPath theMappingFile = "CondFormats/CSCObjects/data/csc_slice_test_map.txt"
	}

	service = ModuleWebRegistry{ }
	service = LockService{untracked vstring labels = {"source"}}
        service = DaqMonitorROOTBackEnd{}
	service = DQMShipMonitoring{
	// event-period for shipping monitoring to collector (default: 25)
	    untracked uint32 period = 5
     	}

        service = MonitorDaemon{
        # if true, will automatically start DQM thread in background
        untracked bool AutoInstantiate=true
        # if >=0, upon a connection problem, the source will automatically
        # attempt to reconnect with a time delay (secs) specified here
        # (default: 5)
        untracked int32 reconnect_delay = 5
        # collector hostname; examples:localhost(default),lxcmse2.cern.ch, etc
        # untracked string DestinationAddress = "localhost"
        untracked string DestinationAddress = "srv-c2d05-19"
        # port for communicating with collector (default: 9090)
        untracked int32 SendPort = 9090
        # monitoring period in ms (i.e. how often monitoring elements
        # are shipped to the collector; default: 1000)
        untracked int32 UpdateDelay = 3000
        # name of DQM source (default: DQMSource)
        untracked string NameAsSource = "CSC"
        }



        //module anawire = testCSCWireDigiDump {}

        #module out = PoolOutputModule {
        #       untracked string fileName ="digi.root"
        #}

        path p = {cscunpacker}
}

