process DQM = {
    
    #untracked PSet maxEvents = { untracked int32 input = 20000 }

    #module dump = EventContentAnalyzer {}

    source = EventStreamHttpReader {
      string sourceURL = "http://cmsmon:50082/urn:xdaq-application:lid=29"
      int32 max_event_size = 7000000
      int32 max_queue_depth = 5
      untracked string consumerName = "CSC DQM Source"
      untracked string consumerPriority = "normal"
      untracked int32 headerRetryInterval = 3
      untracked double maxEventRequestRate = 10
      untracked PSet SelectEvents = { vstring SelectEvents= { "*" } }
    }

    # ==============================================================================================================
    # Unpacker stuff and other
    # ==============================================================================================================

    include "CondCore/DBCommon/data/CondDBSetup.cfi"

    es_source cscConditions = PoolDBESSource {
      using CondDBSetup
      VPSet toGet = {
      #  { string record = "CSCDBGainsRcd"
      #    string tag = "CSCDBGains_ideal" },
      #  { string record = "CSCDBCrosstalkRcd"
      #    string tag = "CSCDBCrosstalk_ideal" },
      #  { string record = "CSCDBNoiseMatrixRcd"
      #    string tag = "CSCDBNoiseMatrix_ideal" },
      #  { string record = "CSCDBPedestalsRcd"
      #    string tag = "CSCDBPedestals_ideal" },
         { string record = "CSCChamberIndexRcd"
           string tag = "CSCChamberIndex" },
         { string record = "CSCChamberMapRcd"
           string tag = "CSCChamberMap" },
         { string record = "CSCCrateMapRcd"
           string tag = "CSCCrateMap" },
         { string record = "CSCDDUMapRcd"
           string tag = "CSCDDUMap" }
      }

      string timetype = "runnumber"
  #   string connect = "frontier://(serverurl=http://frontier1.cms:8000/FrontierOn)(serverurl=http://frontier2.cms:8000/FrontierOn)(retrieve-ziplevel=0)/CMS_COND_ON_170_CSC"
  #   string connect = "frontier://(serverurl=http://frontier1.cms:8000/FrontierOn)(serverurl=http://frontier2.cms:8000/FrontierOn)(retrieve-ziplevel=0)/CMS_COND_ON_18x_CSC"
      string connect = "frontier://(proxyurl=http://localhost:3128)(serverurl=http://frontier1.cms:8000/FrontierOnProd)(serverurl=http://frontier2.cms:8000/FrontierOnProd)(retrieve-ziplevel=0)/CMS_COND_20X_CSC"

      untracked bool siteLocalConfig = false
      untracked uint32 authenticationMethod = 1
      untracked uint32 messagelevel = 0
    }


    module cscunpacker = CSCDCCUnpacker {
      untracked bool runDQM = true
      untracked bool Debug =  false
      untracked bool PrintEventNumber = false
      untracked bool UseExaminer = true       
      untracked uint32 ErrorMask = 0x0
      #0xDFCFEFFF 
      untracked uint32 ExaminerMask = 0x16CBF3F6
      #0x5FB3BF6
      untracked bool UnpackStatusDigis = true
      untracked bool isMTCCData = false
      InputTag InputObjects = source
    }

    service = ModuleWebRegistry{ }

    service = LockService{
      untracked vstring labels = { "source" }
    }

    # ==============================================================================================================

    service = DQM {
      untracked string collectorHost = "localhost"
      untracked int32  collectorPort = 9090
      untracked double publishFrequency = 5
      untracked bool   debug = false
    }

    replace DQMStore.verbose = 0
    replace DQM.collectorHost = "srv-c2d05-19.cms"

    include "DQM/CSCMonitorModule/test/csc_dqm_sourceclient.cfi"
    
    include "DQMServices/Components/test/dqm_onlineEnv.cfi"

    replace dqmSaver.convention       = "Online"
    replace dqmSaver.dirName          = "/cms/mon/data/dropbox"
    replace dqmSaver.producer         = "DQM"
    replace dqmEnv.subSystemFolder    = "CSC"
// replace dqmSaver.saveByLumiSection =  1
// replace dqmSaver.saveByMinute      = -1
// replace dqmSaver.saveByEvent       = -1
   replace dqmSaver.saveByRun         =  1
   replace dqmSaver.saveAtJobEnd      = true
       
    path p = { dqmClient & dqmEnv & dqmSaver }
    #path p = { dump }
    
} 
