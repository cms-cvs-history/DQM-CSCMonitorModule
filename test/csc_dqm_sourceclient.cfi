
    include "CondCore/DBCommon/data/CondDBSetup.cfi"

    es_source cscConditions = PoolDBESSource {
      using CondDBSetup
      VPSet toGet = {
        { string record = "CSCChamberIndexRcd"
          string tag = "CSCChamberIndex" },
        { string record = "CSCChamberMapRcd"
          string tag = "CSCChamberMap" },
        { string record = "CSCCrateMapRcd"
          string tag = "CSCCrateMap" },
        { string record = "CSCDDUMapRcd"
          string tag = "CSCDDUMap" }
      }

      string timetype = "runnumber"

      # To be used on CMS network (one of them)
      string connect = "frontier://(proxyurl=http://localhost:3128)(serverurl=http://frontier1.cms:8000/FrontierOnProd)(serverurl=http://frontier2.cms:8000/FrontierOnProd)(retrieve-ziplevel=0)/CMS_COND_20X_CSC"
      #string connect = "frontier://(serverurl=http://frontier1.cms:8000/FrontierOn)(serverurl=http://frontier2.cms:8000/FrontierOn)(retrieve-ziplevel=0)/CMS_COND_ON_170_CSC"
      #string connect = "frontier://(serverurl=http://frontier1.cms:8000/FrontierOn)(serverurl=http://frontier2.cms:8000/FrontierOn)(retrieve-ziplevel=0)/CMS_COND_ON_18x_CSC"

      # To be used on lxplus
      #string connect = "frontier://FrontierDev/CMS_COND_CSC"

      untracked bool siteLocalConfig = false
      untracked uint32 authenticationMethod = 1
      untracked uint32 messagelevel = 0
    }

    module dqmClient = CSCMonitorModule {

	# Base name for monitor folders and output file		
	untracked string monitorName = "CSC"

        # Source element name in the Event sandwich
        untracked InputTag InputObjects = source

        # Histogram booking file
        FileInPath  BookingFile = "DQM/CSCMonitorModule/data/emuDQMBooking.xml"

        # Examiner complains into cout/cerr or not
        untracked bool ExaminerOutput = false

        # Examiner mask
        untracked uint32 ExaminerMask = 0x16ebf3f6

        # Examiner crc key (1 - ALCT, 2 - CFEB, 4 - TMB), default 0 (no crc checks)
        untracked uint32 ExaminerCRCKey = 7

        # DDU's to book on startup
        untracked vuint32 preBookDDU = {
          # Plus  Endcap DDUs (01-18), all: 0x3FFFF
          0x0,
          # Minus Endcap DDUs (19-36), all: 0x3FFFF
          0x0
        }

        # Book DDU on hit
        untracked bool hitBookDDU = true

    }

    service = MessageLogger {

      untracked vstring destinations = { 
        "detailedInfo" , "critical" , "cout"
      }

      untracked vstring debugModules = { "*" }

      untracked vstring suppressInfo = { "source" }

      untracked PSet critical     = { untracked string threshold = "ERROR"   }

      untracked PSet detailedInfo = { untracked string threshold = "INFO"    } 

      untracked PSet cout = {
        untracked string threshold = "INFO"
        untracked bool noLineBreaks = false
        untracked PSet WARNING = {untracked int32 limit = 0 }
      }

    }

